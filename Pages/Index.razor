@page "/"
@inject MudBlazor.ISnackbar Snackbar

<MudStack Style="width: 100%">
    <MudFileUpload T="IReadOnlyList<IBrowserFile>" Files="@myFiles" @ref="@fileUpload" OnFilesChanged="OnInputFileChanged" Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                   @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
        <ButtonTemplate>
            <MudPaper Height="300px" Outlined="true" Class="@DragClass">
                <MudText Typo="Typo.h6">Drag and drop files here or click</MudText>
                @if (myFiles != null)
                {
                    foreach (var file in myFiles)
                    {
                        <MudChip Color="Color.Dark" Text="@file.Name" />
                    }
                }

            </MudPaper>
        </ButtonTemplate>
    </MudFileUpload>
    <MudToolBar DisableGutters="true" Class="gap-4">
        <MudButton OnClick="Upload" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
        <MudButton OnClick="Clear" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
    </MudToolBar>
</MudStack>

@code {
    private MudFileUpload<IReadOnlyList<IBrowserFile>> fileUpload;
    private IReadOnlyList<IBrowserFile> myFiles;

    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;
    private List<string> fileNames = new List<string>();

    private void OnInputFileChanged(InputFileChangeEventArgs e)
    {
        //ClearDragClass();
        var files = e.GetMultipleFiles();
        foreach (var file in files)
        {
            fileNames.Add(file.Name);
        }

    }

    private async Task Clear()
    {
        fileNames.Clear();
        ClearDragClass();
        await Task.Delay(100);
        Console.WriteLine("fileUpload.Files: ");
        foreach (var f in fileUpload.Files)
        {
            Console.WriteLine(f.Name);
        }
        Console.WriteLine("fileNames: ");
        foreach (var f in fileNames)
        {
            Console.WriteLine(f);
        }
    }

    private void Upload()
    {
        //Upload the files here
        var filesString = string.Join(", ", fileNames);
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add($"Files to upload: {filesString}", Severity.Normal);
        Console.WriteLine("fileUpload.Files: ");
        foreach (var f in fileUpload.Files)
        {
            Console.WriteLine(f.Name);
        }
        Console.WriteLine("fileNames: ");
        foreach (var f in fileNames)
        {
            Console.WriteLine(f);
        }
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        //DragClass = DefaultDragClass;
    }
}
